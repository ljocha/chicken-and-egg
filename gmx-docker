#!/bin/bash

IMAGE=ljocha
VERSION=:2020.01.14-1
DEFAULT_VERSION=$VERSION

FLAGS=`cat /proc/cpuinfo | grep ^flags | head -1`
if echo $FLAGS | grep " avx512f " > /dev/null && docker run "${IMAGE}/gromacs-fmacnt${VERSION}" | grep "2" > /dev/null; then
    ARCH="avx512"
elif echo $FLAGS | grep " avx2 " > /dev/null; then
    ARCH="avx2"
elif echo $FLAGS | grep " avx " > /dev/null; then
    ARCH="avx"
else
    ARCH="sse2"
fi

if echo $FLAGS | grep rdtscp >/dev/null; then
	RDTSCP=_ts
fi

DOUBLE=""

eval set -- $(getopt -o +da:rRv:n:h -- "$@")
unset MPI

while [ $1 != '--' ]; do case $1 in
	-n) MPI="$2"; shift; shift ;;
	-d) DOUBLE="_d"; shift ;;
	-a) ARCH="$2"; shift; shift ;;
	-r) RDTSCP="_ts"; shift ;;
	-R) RDTSCP=""; shift ;;
	-v) VERSION=":$2"; shift; shift ;;
	-h) cat >&2 <<EOF
usage: $0 options [--] gromacs_args ...

options are:
	-n		MPI processes
	-d		double precision
	-a arch		enforce specific CPU architecture (sse2, avx, avx2, avx512)
	-r		enforce RDTSCP (should be detected)
	-R		disable RDTSCP
	-v version	use specific docker image version ($DEFAULT_VERSION by default)
EOF
	exit 1;;
	--) shift; break ;;
esac; done

while [ "$1" == '--' ]; do shift; done

# XXX: _ts_d should work fine but we don't build it
if [ -n "$DOUBLE" ]; then 
	RDTSCP=""; 
	echo warning: disabling RDTSCP with double precision >&2
fi

if [ -z "$WORKDIR_OUTSIDE" ]; then
	WORKDIR_OUTSIDE=$PWD
fi

unset MPIRUN
if [ -n "$MPI" ]; then
	MPIRUN="mpirun -np $MPI"
fi

docker=docker
which nvidia-docker && docker=nvidia-docker
if [ $($docker -v | sed 's/Docker version //; s/\..*$//;') -ge 19 ]; then
	gpu="--gpus all --device /dev/nvidiactl:/dev/nvidiactl --device /dev/nvidia-uvm:/dev/nvidia-uvm"
	for d in /dev/nvidia[0-9]*; do
		gpu="$gpu --device $d:$d"
	done
fi

$docker run $gpu -u $(id -u):$(id -g) -i -v $WORKDIR_OUTSIDE:/tmp ${IMAGE}/gromacs_${ARCH}${RDTSCP}${DOUBLE}${VERSION} $MPIRUN gmx "$@"
